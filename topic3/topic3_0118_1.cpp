/*
    스택과 힙 메모리
    - 스택 메모리는 빠르지만 작다, 메모리가 자동으로 정리된다
    - 힙 메모리는 직접 메모리 용량을 할당해줘야 하며, 해제시켜줘야 한다. (동적할당))
*/
 
/*
    포인터
    - 포인터 : 메모리 주소를 저장할 수 있는 변수 
    - 변수와 포인터의 차이는 값을 저장하는지, 주소를 저장하는지
    - 당연히 가리키는 주소에 저장된 데이터형태를 알아야 함 (포인터를 선언하기 위해))
    - 포인터를 쓰는 이유 : 동적할당을 통해 힙 영역의 메모리를 사용하기 위해 & 임베디드시스템 프로그래밍을 위해서 (메모리에 직접 접근)
    
    - 포인터 정의 : 데이터형* 포인터이름 = 초기화값;
    - 초기화를 하지 않으면 쓰레기값이 들어가기 때문에 nullptr로 초기화하는 것이 중요
*/

#include <iostream>

int main()
{
    int a = 10;
    // int *b = 10; <-- 당연히 b는 포인터형 변수니깐 int형 10으로 초기화 불가능. 메모리 주소를 넣어줄 수 있음
    int *b = nullptr; // nullptr == nowhere
    
    b = &a; // &a : a의 주소
    
    std::cout << a << ' '<< b << std::endl;
    std::cout << &a << std::endl; // a의 주소
    // 주소의 & != 참조의 &
    
    if (b == &a)
    {
        std::cout << "당연히 주소값이 같음" << std::endl;
    }
    
    return 0;
}
